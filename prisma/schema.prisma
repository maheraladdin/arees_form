// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum RoomType {
  ALL         @map("All")
  INDIVIDUALS @map("Individuals")
  GROUPS      @map("Groups")
}

model User {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  email     String     @unique
  wishlists Wishlist[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Wishlist {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  roomId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  room   Room   @relation(fields: [roomId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Room {
  id                   String     @id @default(auto()) @map("_id") @db.ObjectId
  name                 String?
  listing_url          String?
  xl_picture_url       String?
  medium_url           String?
  room_type            RoomType
  smart_location       String?
  guests_included      Int?
  bedrooms             Int?
  beds                 Int?
  bathrooms            Int?
  review_scores_rating Int?
  number_of_reviews    Int?
  host_picture_url     String?
  host_name            String?
  host_since           String?
  description          String?
  price                Int?
  latitude             String?
  longitude            String?
  Wishlist             Wishlist[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
